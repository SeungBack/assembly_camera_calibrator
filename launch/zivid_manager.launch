
<launch>
  <!-- arguments for camera input -->
  <arg name="dictionary" value="8"/>
  <arg name="fiducial_len" value="0.120" />
  <arg name="image" default="image_color"/>
  <arg name="transport" default="compressed"/>
  <arg name="do_pose_estimation" default="true"/>
  <arg name="publish_images" default="true"/>
  <arg name="publish_tf_transforms" default="true"/>
  <arg name="publish_fiducial_tf" default="false"/>
  <arg name="ignore_fiducials" default="" />
  <arg name="fiducial_len_override" default="" />
  <arg name="capture_time" default="1" />
  <arg name="repeat" default="true" />
  <arg name="camera_map" default="$(find assembly_camera_manager)/maps/camera"/>
  <arg name="world_map" default="$(find assembly_camera_manager)/maps/world/gist.yaml"/>

  <!-- Start the aruco_node for zivid-->
  <node pkg="aruco_detect" name="aruco_detect" ns="zivid_camera"
    type="aruco_detect" output="screen" respawn="false">
    <param name="image_transport" value="$(arg transport)"/>
    <param name="publish_images" value="$(arg publish_images)" />
    <param name="publish_tf_transforms" value="$(arg publish_tf_transforms)" />
    <param name="fiducial_len" value="$(arg fiducial_len)"/>
    <param name="dictionary" value="$(arg dictionary)"/>
    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
    <param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
    <param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
    <remap from="tf_prefix" to="zivid_camera"/>
    <remap from="camera/compressed" to="/zivid_camera/color/$(arg image)/$(arg transport)"/>
    <remap from="camera_info" to="/zivid_camera/color/camera_info"/>
    <remap from="fiducial_images" to="/zivid_camera/fiducial_images"/>
    <remap from="fiducial_transforms" to="/zivid_camera/fiducial_transforms"/>
    <remap from="fiducial_vertices" to="/zivid_camera/fiducial_vertices"/>
  </node>


  <!-- Start Zivid driver-->
  <node name="zivid_camera" pkg="zivid_camera" type="zivid_camera_node" ns="zivid_camera" output="screen"/>

  <!-- Start extrininsic calibrator server-->
  <node name="zivid_manager" pkg="assembly_camera_manager" 
        type="zivid_manager.py" respawn="false" output="screen" >
      <param name="camera_name" type="string" value="zivid_camera" />
      <param name="capture_time" value="$(arg capture_time)"/>
      <param name="repeat" value="$(arg repeat)"/>
      <param name="world_map" value="$(arg world_map)" />
  </node>
  
  <!-- define camera2_map as a map  -->
  <node pkg="tf" type="static_transform_publisher" 
        name="azure_map_table_broadcaster" args="0 0 0.5 0 0 0 map map_table 100" /> 
  <node pkg="tf" type="static_transform_publisher" 
        name="azure_base_broadcaster" args="0 0 0 0 0 0 base map 100" /> 


</launch>